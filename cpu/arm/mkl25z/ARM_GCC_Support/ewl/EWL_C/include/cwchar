/* EWL
 * Copyright © 1995-2009 Freescale Corporation.  All rights reserved.
 *
 * $Date: 2009/11/05 19:15:37 $
 * $Revision: 1.2 $
 */

#ifndef _EWL_CWCHAR
#define _EWL_CWCHAR

#include <ansi_parms.h>

#if !_EWL_USING_MW_C_HEADERS
	#include <wchar.h>

	#if _EWL_PUT_THIRD_PARTY_C_IN_STD
		#include <ewl_cpp_std_wchar.h>
	#endif
#else

#if _EWL_WIDE_CHAR

#include <ewl_lib_ext1.h>
#include <ewl_rsize_t.h>
#include <wchar_io.h>
#include <eof.h>
#include <weof.h>
#include <wstdio.h>
#include <wscanf.h>
#include <wcstold.h>
#include <wtime.h>
#include <wcstoul.h>
#include <wstring.h>
#include <wprintf.h>
#include <wmem.h>
#include <null.h>  /* ISO 9899-1: 4.6.1 */

#if _EWL_NEEDS_EXTRAS
	#include <extras_wchar.h>
#endif

_EWL_BEGIN_NAMESPACE_STD
_EWL_BEGIN_EXTERN_C

	#ifdef __cplusplus
		_EWL_END_EXTERN_C
		inline int _EWL_CDECL 				wctob(wint_t c) _EWL_CANT_THROW { return((c & 0xFF00) ? (int)EOF : (int)c);}
		inline wint_t _EWL_CDECL 			btowc(int c) _EWL_CANT_THROW   { return((c & 0x8000) ? (wint_t)WEOF : (wint_t)c);}
		_EWL_BEGIN_EXTERN_C
	#else       /* !__cplusplus */
		_EWL_IMP_EXP_C int _EWL_CDECL 		wctob(wint_t);
		_EWL_IMP_EXP_C wint_t _EWL_CDECL 	btowc(int);

	#endif /* __cplusplus */

	_EWL_IMP_EXP_C size_t _EWL_CDECL 		mbrlen(const char * _EWL_RESTRICT, size_t, mbstate_t * _EWL_RESTRICT) _EWL_CANT_THROW;
	_EWL_IMP_EXP_C int _EWL_CDECL 			mbsinit(const mbstate_t * ) _EWL_CANT_THROW;

	_EWL_IMP_EXP_C size_t _EWL_CDECL 	mbrtowc(wchar_t * _EWL_RESTRICT, const char * _EWL_RESTRICT, size_t, mbstate_t * _EWL_RESTRICT) _EWL_CANT_THROW;
	_EWL_IMP_EXP_C size_t _EWL_CDECL 	wcrtomb(char * _EWL_RESTRICT, wchar_t, mbstate_t * _EWL_RESTRICT) _EWL_CANT_THROW;
	_EWL_IMP_EXP_C size_t _EWL_CDECL 	mbsrtowcs(wchar_t * _EWL_RESTRICT, const char ** _EWL_RESTRICT, size_t, mbstate_t * _EWL_RESTRICT) _EWL_CANT_THROW;
	_EWL_IMP_EXP_C size_t _EWL_CDECL 	wcsrtombs(char * _EWL_RESTRICT, const wchar_t ** _EWL_RESTRICT, size_t, mbstate_t * _EWL_RESTRICT) _EWL_CANT_THROW;

	#if defined(__STDC_WANT_LIB_EXT1__) && __STDC_WANT_LIB_EXT1__
		_EWL_IMP_EXP_C errno_t _EWL_CDECL 	wcrtomb_s(size_t * _EWL_RESTRICT, char * _EWL_RESTRICT, rsize_t, wchar_t, mbstate_t * _EWL_RESTRICT) _EWL_CANT_THROW;
		_EWL_IMP_EXP_C errno_t _EWL_CDECL 	mbsrtowcs_s(size_t * _EWL_RESTRICT, wchar_t * _EWL_RESTRICT, rsize_t, const char ** _EWL_RESTRICT, rsize_t, mbstate_t * _EWL_RESTRICT) _EWL_CANT_THROW;
		_EWL_IMP_EXP_C errno_t _EWL_CDECL 	wcsrtombs_s(size_t * _EWL_RESTRICT, char * _EWL_RESTRICT, rsize_t, const wchar_t ** _EWL_RESTRICT, rsize_t, mbstate_t * _EWL_RESTRICT) _EWL_CANT_THROW;
	#endif /* __STDC_WANT_LIB_EXT1__ */

_EWL_END_EXTERN_C
_EWL_END_NAMESPACE_STD

#if defined(_EWL_EXPORT_CNAMES) && defined(__cplusplus) && defined(_EWL_USING_NAMESPACE)
#include <wchar.h>
#endif /*  defined(_EWL_EXPORT_CNAMES) && defined(__cplusplus) && defined(_EWL_USING_NAMESPACE) */


#endif /* _EWL_WIDE_CHAR */

#endif /* _EWL_USING_MW_C_HEADERS */

#endif /* _EWL_CWCHAR */
