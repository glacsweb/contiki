# Adapted from Makefile.msp430

### Code common for all ARM CPUs

CONTIKI_CPU_ARM=$(CONTIKI)/cpu/arm
CONTIKI_CPU_ARM_COMMON=$(CONTIKI_CPU_ARM)/common

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI_CPU_ARM)/mkl25z


### Compiler definitions
CC       = arm-none-eabi-gcc
CP       = arm-none-eabi-objcopy
LD       = arm-none-eabi-ld
AS       = arm-none-eabi-as
AR       = arm-none-eabi-ar
NM       = arm-none-eabi-nm
OBJCOPY  = arm-none-eabi-objcopy
STRIP    = arm-none-eabi-strip
HEX      = $(CP) -O ihex
BIN      = $(CP) -O binary -S
S19      = $(CP) -O srec
MCU      = cortex-m0

# List all user C define here, like -D_DEBUG=1
UDEFS =

# Define ASM defines here
UADEFS =

# List all default C defines here, like -D_DEBUG=1
DDEFS =

# List all default ASM defines here, like -D_DEBUG=1
DADEFS =

# List all default directories to look for include files here
DINCDIR =

# List the default directory to look for the libraries here
DLIBDIR =

LIBSDIR =

# List all default libraries here
DLIBS =


#
# End of default section
##############################################################################################
 
##############################################################################################
# Start of user section
#


### Define the source files we have in the mkl25z port
MKL25Z_CSRC     = clock.c debug-uart.c rtimer-arch.c serial.c nvic.c cpu.c clock.c kinetis_sysinit.c sa_mtb.c

TARGETLIBS = random.c dbg-printf.c dbg-puts.c dbg-putchar.c dbg-sprintf.c dbg-snprintf.c strformat.c

CONTIKI_TARGET_SOURCEFILES += $(MKL25Z_CSRC) $(SYSAPPS) $(ELFLOADER) \
			$(TARGETLIBS) $(UIPDRIVERS) $(USB)

CONTIKI_SOURCEFILES        += $(CONTIKI_TARGET_SOURCEFILES)


# List ASM source files here
MKL25Z_ASRC     = startup.S

# List all user directories here
UINCDIR = -I. -I$(CONTIKI)/core -I$(CONTIKI_CPU) -I$(CONTIKI_CPU)/dbg-io \
           -I$(CONTIKI)/platform/$(TARGET) ${addprefix -I,$(APPDIRS)} \
           -DWITH_UIP -DWITH_ASCII -DMCK=$(MCK) 

# List the user directory to look for the libraries here
ULIBDIR =
 
# List all user libraries here
ULIBS =
 
# Define optimisation level here
OPT = -O0
		   
#
# End of user defines
##############################################################################################
#
# Define linker script file here
#		   


LINKER = $(CONTIKI_CPU)/MKL25Z128_flash.ld
FULL_PRJ = $(CONTIKI_PROJECT)_flash

INCDIR = $(patsubst %,-I%,$(DINCDIR) $(UINCDIR))
LIBDIR = $(patsubst %,-L%,$(DLIBDIR) $(ULIBDIR))


DEFS = $(DDEFS) $(UDEFS)
ADEFS = $(DADEFS) $(UADEFS)
LIBS = $(DLIBS) $(ULIBS)

PROJECT_OBJECTFILES = $(CONTIKI_SOURCEFILES:.c=.o) $(MKL25Z_ASRC:.S=.o)
OBJS = ${addprefix -I $(OBJECTDIR)/, $(PROJECT_OBJECTFILES)}

MCFLAGS = -mcpu=$(MCU)

CPFLAGS = $(MCFLAGS) $(OPT) -gdwarf-2 -mthumb -fomit-frame-pointer -Wall -Wstrict-prototypes -fverbose-asm -Wa,-ahlms=$(<:.c=.lst) $(DEFS)
ASFLAGS = $(MCFLAGS) -g -gdwarf-2 -mthumb -Wa,-amhls=$(<:.S=.lst) $(ADEFS)
LDFLAGS = $(MCFLAGS) -mthumb -nostartfiles -T$(LDSCRIPT) -Wl,-Map=$(FULL_PRJ) .map,--cref,--no-warn-mismatch $(LIBDIR)

# Generate dependency information
CPFLAGS += -MD -MP -MF .dep/$(@F).d

CDEPFLAGS = $(CFLAGS) -D __MAKING_DEPS__


#
# End of linker scripts
##############################################################################################
#
# Define programming foo
#



# Use OpenOCD by default
PROG=openocd

# JTAG program upload
OPENOCD	 = openocd
OPENOCD_DIR = $(CONTIKI_CPU_ARM)/openocd/ 
OPENOCD_CFG = kl25z.cfg
OPENOCD_FLAGS = -c "interface cmsis-dap" 
OPENOCD_FLAGS += -c init 
OPENOCD_FLAGS += -c "reset halt;sleep 250;flash probe 0; sleep 500;flash write_bank 0 $< 0;reset halt;resume;sleep 500;exit"


#
# End of programming foo
##############################################################################################
#
# Define makefile rules
#

all: $(OBJS) $(FULL_PRJ).elf $(FULL_PRJ).hex $(FULL_PRJ).bin
	$(TRGT)size $(PROJECT)_flash.elf
 
%.o: %.c
	$(CC) -c $(CPFLAGS) -I . $(INCDIR) $< -o $@

%.o: %.S
	$(AS) -c $(ASFLAGS) $< -o $@

%.elf: $(OBJS)
	$(CC) $(OBJS) $(LDFLAGS) $(LIBS) -o $@

%.hex: %.elf
	$(HEX) $< $@

%.bin: %.elf
	$(BIN) $< $@

clean:
	rm $(OBJS)
	rm $(FULL_PRJ).elf
	rm $(FULL_PRJ).map
	rm $(FULL_PRJ).hex
	rm $(FULL_PRJ).bin
	# rm $(SRC:.c=.c.bak)
	rm $(SRC:.c=.lst)
	# del $(ASRC:.S=.S.bak)
	rm $(ASRC:.S=.lst)
	rm -rf .dep
    
    
#
# Include the dependency files, should be the last of the makefile
#
#-include $(shell mkdir .dep 2>/dev/null) $(wildcard .dep/*)
#23-July-2012 /dev/null gives an error on Win 7 64-bit : Hussam
-include $(shell mkdir .dep) $(wildcard .dep/*)

# *** EOF ***